version: "3.8"


services:

  router1:
    build: 
      context: ./router1
      dockerfile: dockerFile
    container_name: router1
    restart: on-failure
    volumes:
        - './router1/sys/fs/cgroup:/sys/fs/cgroup:ro'
    #volumes:
    #  - ./router1/netplan/01-network-manager-all.yaml:/etc/netplan/01-network-manager-all.yaml
    cap_add:
      - NET_ADMIN
    networks:
      - vlan-1

  dhcp1:
    build: 
      context: ./dhcp_server
      dockerfile: dockerFile
    user: root
    container_name: dhcpd1
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    restart: on-failure
    command: ["sleep","infinity"] 
    privileged: true
    ports:
      - "67/udp"
    volumes:
      - ./dhcp_server/bash.sh:/bash.sh
      - ./dhcp_server/dhcpd.conf:/etc/dhcp/dhcpd.conf
      - ./dhcp_server/isc-dhcp-server:/etc/default/isc-dhcp-server
      - ./dhcp_server/interfaces:/etc/network/interfaces
    cap_add:
      - NET_ADMIN
    environment:
      - HTTP_USER=foo
      - HTTP_PASS=bar
    networks:
      vlan-1:
        ipv4_address: 10.0.0.4
  
  dns:
    build: 
      context: ./dns
      dockerfile: dockerFile
    container_name: dns
    volumes:
      #- ./dns/:/etc/
      - ./dns/resolv.conf:/etc/resolv.conf
      - ./dns/bind/named.conf.local:/etc/bind/named.conf.local
      - ./dns/bind/named.conf.options:/etc/bind/named.conf.options
      
      #
      - ./dns/bind/db.google:/etc/bind/db.google
      - ./dns/bind/db.lan01:/etc/bind/db.lan01
      - ./dns/bind/db.lan02:/etc/bind/db.lan02

    restart: on-failure
    command: ["sleep","infinity"]
    networks:
      vlan-1:
        ipv4_address: 10.0.0.3

  nginx-proxy:
    build: 
      context: ./reverse_proxy
      dockerfile: dockerFile
    container_name: reverse_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./reverse_proxy/hosts:/etc/hosts
      - ./reverse_proxy/backend-not-found.html:/var/www/html/backend-not-found.html
      - ./reverse_proxy/includes/:/etc/nginx/includes/
      - ./reverse_proxy/ssl/:/etc/ssl/certs/nginx/
      - ./reverse_proxy/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    privileged: true
    networks:
      vlan-1:
        ipv4_address: 10.0.0.20
      vlan-2:

  web_server_1:
    build: 
      context: ./web_server1
      dockerfile: dockerFile
    container_name: web_server_1
    expose:
      - "80"
    volumes:
      - ./html/:/usr/share/nginx/html
    environment:
      VIRTUAL_HOST: http://www.google.com/web1
    restart: always

    networks:
      vlan-1:
        ipv4_address: 10.0.0.21
  

  web_server_2:
    build: 
      context: ./web_server2
      dockerfile: dockerFile
    container_name: web_server_2
    expose:
      - "80"
    volumes:
      - ./html2/:/usr/share/nginx/html
    environment:
      VIRTUAL_HOST: http://www.google.com/web2
    restart: always

    networks:
      vlan-2:
        ipv4_address: 10.0.1.21



  openvpn:
    container_name: VPN
    restart: always
    cap_add:
      - NET_ADMIN
    build: 
      context: ./openvpn
      dockerfile: dockerFile
    ports:
      - "8443:8443/tcp" #router 1 debe enrutar a este puerto
    networks:
      vlan-2: 
        ipv4_address: 10.0.1.10
    volumes:
     - ./openvpn/conf:/etc/openvpn
  
  
  cliente_01:
    build: 
      context: ./ubuntu
      dockerfile: dockerFile
    container_name: ubuntu
    volumes:
      - ./ubuntu/resolv.conf:/etc/resolv.conf
      - ./ubuntu/interfaces:/etc/network/interfaces
    restart: on-failure
    command: ["sleep","infinity"]
    depends_on:
      - dhcp1
    networks:
      - vlan-1

networks:
  vlan-1:
    name: LAN Virtual 1
    driver: bridge
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: "10.0.0.0/24"
          ip_range: "10.0.0.0/24"
          gateway: "10.0.0.1"
  
  vlan-2:
    name: LAN Virtual 2
    driver: bridge
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: "10.0.1.0/24"
          ip_range: "10.0.1.0/24"
          gateway: "10.0.1.1"




